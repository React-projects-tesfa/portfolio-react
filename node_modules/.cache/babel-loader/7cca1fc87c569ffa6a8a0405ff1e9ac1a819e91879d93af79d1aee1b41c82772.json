{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = __importStar(require(\"react\"));\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\nvar styles_1 = require(\"./styles\");\nvar DayAndNightToggle = function (_a) {\n  var onChange = _a.onChange,\n    checked = _a.checked,\n    _b = _a.size,\n    size = _b === void 0 ? 32 : _b,\n    _c = _a.startInactive,\n    startInactive = _c === void 0 ? false : _c,\n    _d = _a.animationInactive,\n    animationInactive = _d === void 0 ? true : _d,\n    _e = _a.shadows,\n    shadows = _e === void 0 ? true : _e,\n    _f = _a.className,\n    className = _f === void 0 ? undefined : _f,\n    labelProps = __rest(_a, [\"onChange\", \"checked\", \"size\", \"startInactive\", \"animationInactive\", \"shadows\", \"className\"]);\n  var _g = __read(react_1.useState(false), 2),\n    disable = _g[0],\n    setDisable = _g[1];\n  var _h = __read(react_1.useState(startInactive), 2),\n    startingInactive = _h[0],\n    setStartingInactive = _h[1];\n  var roundedSize = Math.floor(size);\n  react_1.useEffect(function () {\n    if (startingInactive) {\n      setDisable(true);\n      setTimeout(function () {\n        setDisable(false);\n      }, 2000);\n    }\n    return setStartingInactive(false);\n  }, [checked, startingInactive]);\n  return react_1.default.createElement(styles_1.SwitchContainer, __assign({\n    className: className,\n    size: roundedSize\n  }, labelProps), react_1.default.createElement(styles_1.Switch, {\n    shadows: shadows,\n    size: roundedSize,\n    checked: checked,\n    onClick: !disable ? function () {\n      onChange();\n      setDisable(true);\n      if (animationInactive) {\n        setTimeout(function () {\n          setDisable(false);\n        }, 2000);\n      } else {\n        setDisable(false);\n      }\n    } : null\n  }, react_1.default.createElement(styles_1.ContentWrapper, null, react_1.default.createElement(styles_1.Circle, null), react_1.default.createElement(styles_1.Stars, null, react_1.default.createElement(styles_1.Star, null), react_1.default.createElement(styles_1.Star, null), react_1.default.createElement(styles_1.Star, null), react_1.default.createElement(styles_1.ShootingStarWrapper, null, react_1.default.createElement(styles_1.ShootingStar, null))), react_1.default.createElement(styles_1.Clouds, null, react_1.default.createElement(styles_1.Cloud, null, react_1.default.createElement(styles_1.Cloudpart, null), react_1.default.createElement(styles_1.Cloudpart, null)), react_1.default.createElement(styles_1.Cloud, null, react_1.default.createElement(styles_1.Cloudpart, null), react_1.default.createElement(styles_1.Cloudpart, null)), react_1.default.createElement(styles_1.Cloud, null, react_1.default.createElement(styles_1.Cloudpart, null), react_1.default.createElement(styles_1.Cloudpart, null), react_1.default.createElement(styles_1.Cloudpart, null))))));\n};\nDayAndNightToggle.propTypes = {\n  onChange: prop_types_1.default.func.isRequired,\n  checked: prop_types_1.default.bool.isRequired,\n  size: prop_types_1.default.number,\n  startInactive: prop_types_1.default.bool,\n  animationInactive: prop_types_1.default.bool,\n  shadows: prop_types_1.default.bool,\n  className: prop_types_1.default.string\n};\nDayAndNightToggle.defaultProps = {\n  onChange: function () {\n    return null;\n  },\n  checked: false,\n  size: 32,\n  startInactive: false,\n  animationInactive: true,\n  shadows: true,\n  className: undefined\n};\nvar propsAreEqual = function (prevProps, nextProps) {\n  return prevProps.checked === nextProps.checked && prevProps.size === nextProps.size && prevProps.startInactive === nextProps.startInactive && prevProps.animationInactive === nextProps.animationInactive && prevProps.shadows === nextProps.shadows && prevProps.className === nextProps.className;\n};\nexports.default = react_1.memo(DayAndNightToggle, propsAreEqual);","map":{"version":3,"mappings":"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","names":["DayAndNightToggle","_a","checked","_b","size","_c","startInactive","_d","animationInactive","_e","shadows","_f","className","undefined","labelProps","react_1","disable","setDisable","startingInactive","setStartingInactive","roundedSize","Math","floor","setTimeout","styles_1","onClick","onChange","propTypes","prop_types_1","func","isRequired","bool","number","string","defaultProps","propsAreEqual","prevProps","nextProps","exports"],"sources":["/Users/tesfatsionshiferaw/Documents/GitHub/portfolio-react/node_modules/react-day-and-night-toggle/dist/src/index.tsx"],"sourcesContent":["import React, { useState, useEffect, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Switch,\n    SwitchContainer,\n    ContentWrapper,\n    Circle,\n    Star,\n    Stars,\n    ShootingStar,\n    ShootingStarWrapper,\n    Cloud,\n    Clouds,\n    Cloudpart\n} from './styles'\n\n\ninterface IProps {\n    onChange: () => void,\n    checked: boolean,\n    size?: number,\n    startInactive?: boolean,\n    animationInactive?: boolean,\n    shadows?: boolean,\n    className?: string | undefined,\n    [props: string]: any\n}\n\nconst DayAndNightToggle = ({\n    onChange,\n    checked,\n    size = 32,\n    startInactive = false,\n    animationInactive = true,\n    shadows = true,\n    className = undefined,\n    ...labelProps\n}: IProps) => {\n    const [disable, setDisable] = useState(false)\n    const [startingInactive, setStartingInactive] = useState(startInactive)\n\n    const roundedSize: number = Math.floor(size)\n\n    useEffect(() => {\n        if (startingInactive) {\n            setDisable(true)\n            setTimeout(() => {\n                setDisable(false)\n            }, 2000)\n        }\n        return setStartingInactive(false)\n    }, [checked, startingInactive])\n\n    return (\n        <SwitchContainer className={className} size={roundedSize} {...labelProps}>\n            <Switch shadows={shadows} size={roundedSize} checked={checked}\n                onClick={\n                    !disable\n                        ? () => {\n                            onChange()\n                            setDisable(true)\n                            if (animationInactive) {\n                                setTimeout(() => {\n                                    setDisable(false)\n                                }, 2000)\n                            } else {\n                                setDisable(false)\n                            }\n                        }\n                        : null\n                }>\n                <ContentWrapper>\n                    <Circle />\n                    <Stars>\n                        <Star />\n                        <Star />\n                        <Star />\n                        <ShootingStarWrapper>\n                            <ShootingStar />\n                        </ShootingStarWrapper>\n                    </Stars>\n                    <Clouds>\n                        <Cloud>\n                            <Cloudpart />\n                            <Cloudpart />\n                        </Cloud>\n                        <Cloud>\n                            <Cloudpart />\n                            <Cloudpart />\n                        </Cloud>\n                        <Cloud>\n                            <Cloudpart />\n                            <Cloudpart />\n                            <Cloudpart />\n                        </Cloud>\n                    </Clouds>\n                </ContentWrapper>\n            </Switch>\n        </SwitchContainer>\n    )\n}\n\nDayAndNightToggle.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool.isRequired,\n    size: PropTypes.number,\n    startInactive: PropTypes.bool,\n    animationInactive: PropTypes.bool,\n    shadows: PropTypes.bool,\n    className: PropTypes.string,\n}\n\nDayAndNightToggle.defaultProps = {\n    onChange: () => null,\n    checked: false,\n    size: 32,\n    startInactive: false,\n    animationInactive: true,\n    shadows: true,\n    className: undefined,\n}\n\nconst propsAreEqual = (prevProps: IProps, nextProps: IProps) =>\n    prevProps.checked === nextProps.checked &&\n    prevProps.size === nextProps.size &&\n    prevProps.startInactive === nextProps.startInactive &&\n    prevProps.animationInactive === nextProps.animationInactive &&\n    prevProps.shadows === nextProps.shadows &&\n    prevProps.className === nextProps.className\n\nexport default memo(DayAndNightToggle, propsAreEqual)"]},"metadata":{},"sourceType":"script","externalDependencies":[]}